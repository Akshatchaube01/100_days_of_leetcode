Problem Statement:

https://leetcode.com/problems/arithmetic-subarrays

Problem Solution:

class Solution {
public:
    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r) {
        vector<bool> new_vec;
        set<int>sett;
        vector<int>vecna;
        for(int i=0;i<=l.size()-1;i++){
            for(int j=l[i];j<=r[i];j++){
                
                vecna.push_back(nums[j]);
            }
            sort(vecna.begin(),vecna.end());
            for(int j=0;j<vecna.size()-1;j++){
                sett.insert(vecna[j+1]-vecna[j]);
            }
            if(sett.size()!=1){
                new_vec.push_back(false);
            }
            else{
                new_vec.push_back(true);
            }
            sett.clear();
            vecna.clear();
        }
        return new_vec;
    }
};
